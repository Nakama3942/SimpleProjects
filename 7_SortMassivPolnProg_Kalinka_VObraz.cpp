#include <stdio.h>
#include <Windows.h>

int main() {
	//Подключаю русский
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	
	//Задаю предварительно размер массива
	int NumMass = 100;
	
	//Начинаю диалог с пользователем
	printf("\n\nЭто программа для сортировки массивов.\n\n\n");
	system("pause");
	printf("\n\nВ программе используются переменные типа int, которые имеют размер 4 байта (32 бита),\n");
	printf("поэтому минимальное значение вводимиого элемента -2 147 483 648, а максимальное\n");
	printf("2 147 483 647. Просьба - не вводите каждый элемент массива больше/меньше указанного!\n");
	printf("И ещё: Лучше в программе не сортировать массивы, в которых больше 100 элементов.\n\n");
	
	//Пользователь вводит размер массива
	printf("Укажите количество элементов вашего массива: ");
	scanf("%i", &NumMass);
	
	//Создаю массив
	int MyMassiv[NumMass];
	
	//В зависимости от размера миссива, пользователь вводит такое количество элементов массива
	for (int p = 0; p < NumMass; p++) {
		printf("\nВведите %i число: ", p + 1);
		fflush(stdin);
		scanf("%i", &MyMassiv[p]);
	}
	
	//Спрашиваю у пользователя, хочет ли он видеть, как программа сортирует массив
	int ProvNastroy;
	boolean Nastroy;
	boolean Prov_ProvNastroy = 1;
	printf("\n\nМаленькая настроечка: Хотите ли вы видеть процесс сортировки (нужно при настройке программы) (1/0)? ");
	do {
		fflush(stdin);
		scanf("%i", &ProvNastroy);
		switch (ProvNastroy) {
		case 1:
			Prov_ProvNastroy = 1;
			Nastroy = 1;
			break;
		case 0:
			Prov_ProvNastroy = 1;
			Nastroy = 0;
			break;
		default:
			Prov_ProvNastroy = 0;
			printf("Введено неправильное значение, повторите попытку: ");
			break;	
		}
	} while (Prov_ProvNastroy == 0);
	
	//Создаю счёткики циклов и необходимые переменные
	int i, k, n, m, MassElement1 = MyMassiv[0], MassElement2;
	
	//Пропускаю немного места
	printf("\n\n");
	
	//Программа начинает процесс сортировки
	for (k = 0; k < NumMass; k++) {
		//этот цикл находит самое большое число
		for (i = k; i < NumMass; i++) {
			//Присваиваю второму числу значение элемента массива, который соответсвует номеру счётчика цикла
			MassElement2 = MyMassiv[i];
			
			//Если второе число больше первого, оно записывается в первое
			if (MassElement1 < MassElement2) {
				MassElement1 = MassElement2;
			}
			
			//Следующий текст выводится только если пользователь этого хочет
			if (Nastroy == 1) {
				printf("Проверка работы 1:первый элемент: %i; Второй: %i .\n", MassElement1, MassElement2);
			}
		}
		
		//Следующий текст выводится только если пользователь этого хочет
		if (Nastroy  == 1) {
			printf("Смена режима проверки...\n");
		}
		
		//Этот цикл меняет это число местами с элементом, номер которого соответствует основному циклу
		for (n = k; n < NumMass; n++) {
			//После нахождения большого числа, на его место записывается элемент, который соответствует
			//счётчику основного цикла, а это число записывается на место с номером счётчика основного цикла
			if (MassElement1 == MyMassiv[n]) {
				MyMassiv[n] = MyMassiv[k];
				MyMassiv[k] = MassElement1;
			}
			
			//Следующий текст выводится только если пользователь этого хочет
			if (Nastroy == 1) {
				printf("Проверка работы 2: первый элемент: %i; Второй: %i .\n", MassElement1, MyMassiv[n]);
			}
		}
		
		//Сбрасываю первое число на минимальное, чтобы цикл правильно работал
		MassElement1 = -2147483647;
		
		//Выводится промежуточный результат текущего этапа сортировки, если пользователь этого хочет
		if (Nastroy == 1) {
			printf("\nМассив: ");
			printf("%i", MyMassiv[0]);
			for (m = 1; m < NumMass; m++) {
				printf(", %i", MyMassiv[m]);
			}
			printf(". Конец этого этапа.\n\n\n");
		}
		//Это и весь цикл, дальше он повторяется/заканчивается
	}
	
	//Вывожу окончательный результат
	printf("\nРезультат: Новый отсортированный массив: ");
	printf("%i", MyMassiv[0]);
	for (m = 1; m < NumMass; m++) {
		printf(", %i", MyMassiv[m]);
	}
	printf(". Сортировка завершена. ");
	
	//Завершение программы
	system("pause");
	return 0;
}
