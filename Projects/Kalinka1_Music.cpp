//*Программа, в которой просто присутствует много проверок для работы выходов и вообще введёных значений пользователей. В этой программе много комментариев, в которых много чего объясняется

#include <iostream>
using namespace std;

void FProverVyhod(bool *ProverNomMuzZnak)
{
    int ProverVyhod;    //Переменная проверки пользовательской инфо на ответ про выход
    cin >> ProverVyhod; //Пользователь вводит ответ на вопрос про выход
    //Дальше следует проверка введёного ответа
    switch (ProverVyhod)
    {
    case 0:
        *ProverNomMuzZnak = 0; //Завершаем цикл
        break;
    case 1:
        *ProverNomMuzZnak = 1; //Повторяем цикл
        break;
    default:
        cout << "Введено неправильное значение. Подразумевается ввод значения 1.";
        *ProverNomMuzZnak = 1; //Повторяем цикл
        break;
    }
}
void Nota()
{
    int NomMuzZnak; //Переменная номера музыкального знака
    cout << "Введите номер нотного символа, а приложение выведет его название. ";
    bool ProverNomMuzZnak = 0; //Переменная, отвечающая за выход из цикла общения с пользователем; объявляю её глобальной
    do
    {
        cout << "Номер: ";
        cin >> NomMuzZnak;
        //Следующий Switch отвечает на ответ от пользователя. Его цель: вывести ответ и спросить, не хочет ли пользователь продолжить работу. В случае: неправильного ввода в начале, цикл начинается заново; если неправильно введено значение при ответе на продолжение работы, выбирается положительный ответ и цикл повторяется; при положительном ответе на продолжение работы цикл повторяется; и только при негативном ответе на продолжение работы цикл завершается. Этот процес регулируется булевыми переменными
        switch (NomMuzZnak)
        {
        case 1:
            cout << "\nЭто До.\nХотите продолжить работу (1/0)? "; //Выводим результат и спрашиваем продолжение работы
            //Дальше следует ввод ответа и проверка введёного ответа - для этого вызывается функция FProverVyhod
            FProverVyhod(&ProverNomMuzZnak);
            break;
            //Следующие кейсы от 2 до 7 аналогичны 1 за тем лишь отличием, что в строчке вывода будет отличаться выходной результат (не До, а, например, Ре или Ля)
        case 2:
            cout << "\nЭто Ре.\nХотите продолжить работу (1/0)? ";
            FProverVyhod(&ProverNomMuzZnak);
            break;
        case 3:
            cout << "\nЭто Ми.\nХотите продолжить работу (1/0)? ";
            FProverVyhod(&ProverNomMuzZnak);
            break;
        case 4:
            cout << "\nЭто Фа.\nХотите продолжить работу (1/0)? ";
            FProverVyhod(&ProverNomMuzZnak);
            break;
        case 5:
            cout << "\nЭто Соль.\nХотите продолжить работу (1/0)? ";
            FProverVyhod(&ProverNomMuzZnak);
            break;
        case 6:
            cout << "\nЭто Ля.\nХотите продолжить работу (1/0)? ";
            FProverVyhod(&ProverNomMuzZnak);
            break;
        case 7:
            cout << "\nЭто Си.\nХотите продолжить работу (1/0)? ";
            FProverVyhod(&ProverNomMuzZnak);
            break;
        default:
            //Дефолт служит на случай неправильного ввода ответа на выбор ноты. Он сразу готовит цикл на повтор, чтобы пользователь мог повторно ввести данные
            ProverNomMuzZnak = 1; //установка повторения цикла
            cout << "Введено неправильное значение, повторите попытку. ";
            break;
        }
    } while (ProverNomMuzZnak == 1); //условие повторения цикла (не выполняется только в случае отказа на продолжение работы)
}
int main()
{
    Nota();
    cout << "Программа завершена.\n"; //В случае отказа от продолжения работы цикл завершается и следует завершение программы
    return 0;
}